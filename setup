#!/usr/bin/env ruby

require 'fileutils'

# only for spin
exit 0 if !ENV['SPIN'] 

HOME = ENV['HOME']
REPO = "/src/github.com/shopify/shopify"

DEPENDENCIES = [ "nano" ]
GEMS = ["$HOME/dotfiles/customGems/debase-2.3.2.gem", "$HOME/dotfiles/customGems/ruby-debug-ide-2.3.1.gem", "$HOME/dotfiles/customGems/debase-0.2.5.beta2.gem", "$HOME/dotfiles/customGems/ruby-debug-ide-0.7.1.beta3.gem"]

BASH_GIT_PROMPT_TEXT =
%{
  if [ -f "$HOME/.bash-git-prompt/gitprompt.sh" ]; then
    GIT_PROMPT_ONLY_IN_REPO=0
    source $HOME/.bash-git-prompt/gitprompt.sh
  fi
}

BASH_LOGIN_READS_RC =
%{
  case "$-" in *i*) if [ -r ~/.bashrc ]; then . ~/.bashrc; fi;; esac
}

def system_or_exit1(*args)
    unless system(*args)
      puts "ERROR: Command failed. Aborting."
      exit 1
    end
    true
end

def has_cmd?(cmd)
    system("which #{cmd}", STDOUT => '/dev/null') == true
end
  
def install(cmd)
    system_or_exit1("sudo apt-get -y install #{cmd}")
end

def install_gem(_gem)
    system_or_exit1("sudo gem install #{_gem}")
    system_or_exit1("gem install #{_gem}")
end

def install_git_prompt
  FileUtils.rm_rf("#{HOME}/.bash-git-prompt")
  system_or_exit1("git clone https://github.com/magicmonty/bash-git-prompt.git #{HOME}/.bash-git-prompt --depth=1")
end

def move_git_dot_files
  if File.exist?("#{HOME}/.gitconfig")
    puts "WARN: Moving #{HOME}/.gitconfig to #{HOME}/.gitconfig.default"
    puts "      This file is load by the dotfile .gitconfig"
    FileUtils.mv("#{HOME}/.gitconfig", "#{HOME}/.gitconfig.default")
  end
  FileUtils.cp("#{HOME}/dotfiles/.gitconfig", "#{HOME}/.gitconfig")
  FileUtils.cp("#{HOME}/dotfiles/.gitignore", "#{HOME}/.gitignore")
end

def append_git_prompt
  bash_rc = "#{HOME}/.bashrc"
  bash_login = "#{HOME}/.bash_login"
  File.write(bash_rc, BASH_GIT_PROMPT_TEXT, mode: 'a')
  File.write(bash_login, BASH_LOGIN_READS_RC, mode: 'a')
end

def switch_to_bash
  system_or_exit1("sudo chsh -s /bin/bash spin")
end

def install_debugger
  if !File.exist?("#{REPO}/.vscode/launch.json")
    FileUtils.cp("#{HOME}/dotfiles/launch.json", "#{REPO}/.vscode/launch.json")
  end

  # for Ruby
  if ENV['RUBY_VERSION'] 
    FileUtils.cp("#{HOME}/dotfiles/rdebug", "#{REPO}/.spin/bin")
  end

  # for Node
  if ENV['NODE_VERSION'] 

  end
end

# def setup_vscode_files
#   workspace = "/src/github.com/shopify/shopify"

#   FileUtils.cp("#{HOME}/dotfiles/launch.json", "#{workspace}/.vscode")
#   FileUtils.cp("#{HOME}/dotfiles/settings.json", "#{workspace}/.vscode")
#   FileUtils.cp("#{HOME}/dotfiles/.solargraph.yml", workspace)
#   FileUtils.cp("#{HOME}/dotfiles/debug", "#{workspace}/tmp")
# end


puts "1. Append Git Prompt"
append_git_prompt

puts "2. Installing dependencies"
DEPENDENCIES.each do |app|
  unless has_cmd?(app)
    puts "Installing: #{app}"
    install(app)
  end
end

puts "3. Installing gems"
GEMS.each do |gem|
    puts "Installing Ruby Gem: #{gem}"
    install_gem(gem)
end

puts "4. Install bash-git-prompt"
install_git_prompt

puts "5. Copy over git dot files"
move_git_dot_files

puts "6. Set up debugging"
install_debugger

puts "7. Switch to bash"
switch_to_bash


